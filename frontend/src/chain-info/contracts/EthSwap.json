{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "TokensSold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/arpit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "1": "contracts/EthSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/EthSwap.sol",
    "exportedSymbols": {
      "EthSwap": [
        149
      ],
      "IERC20": [
        227
      ]
    },
    "id": 150,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/arpit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 150,
        "sourceUnit": 228,
        "src": "25:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EthSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 149,
        "linearizedBaseContracts": [
          149
        ],
        "name": "EthSwap",
        "nameLocation": "92:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 5,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "121:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 149,
            "src": "107:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$227",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 227,
                "src": "107:6:1"
              },
              "referencedDeclaration": 227,
              "src": "107:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$227",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c4e722e",
            "id": 8,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "148:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 149,
            "src": "136:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "136:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
            "id": 18,
            "name": "TokensPurchased",
            "nameLocation": "171:15:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "204:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "196:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "229:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "221:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "249:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "244:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "270:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "265:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:94:1"
            },
            "src": "165:116:1"
          },
          {
            "anonymous": false,
            "eventSelector": "697c42d55a5e1fed3f464ec6f38b32546a0bd368dc8068b065c67566d73f3290",
            "id": 28,
            "name": "TokensSold",
            "nameLocation": "293:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "321:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "313:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "346:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "338:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "366:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "361:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "387:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "382:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "303:94:1"
            },
            "src": "287:111:1"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "450:54:1",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "460:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "479:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "472:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$227_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "472:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "460:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$227",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "460:37:1"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "424:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "416:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:27:1"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:1"
            },
            "scope": 149,
            "src": "404:100:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "546:420:1",
              "statements": [
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "610:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "605:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "605:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 45,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "624:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "624:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 47,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "636:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "624:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "605:35:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 55,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "737:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EthSwap_$149",
                                    "typeString": "contract EthSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EthSwap_$149",
                                    "typeString": "contract EthSwap"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "729:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "729:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "729:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 51,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "709:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "709:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "709:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 58,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "747:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "709:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "701:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "701:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "828:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "840:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62,
                        "name": "dappToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "809:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "809:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "809:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "909:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "909:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 75,
                            "name": "dappToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "929:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$227",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$227",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "921:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "921:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "921:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "941:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "954:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70,
                      "name": "TokensPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "893:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "EmitStatement",
                  "src": "888:71:1"
                }
              ]
            },
            "functionSelector": "d0febe4c",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokens",
            "nameLocation": "519:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:1"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:1"
            },
            "scope": 149,
            "src": "510:456:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "1013:636:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 90,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1105:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1105:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 88,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "1085:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "1085:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1085:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 93,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1120:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1085:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457468537761703a20746f6b656e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ceefe688fde2e07572e7db665e6c1429b2be420493e20c3a4a5f6ab1212c60",
                          "typeString": "literal_string \"EthSwap: token amount exceeds balance\""
                        },
                        "value": "EthSwap: token amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72ceefe688fde2e07572e7db665e6c1429b2be420493e20c3a4a5f6ab1212c60",
                          "typeString": "literal_string \"EthSwap: token amount exceeds balance\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1077:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:92:1"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "etherAmount",
                      "nameLocation": "1236:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 147,
                      "src": "1231:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1231:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1250:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 101,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1260:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1250:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1231:33:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 107,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1340:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EthSwap_$149",
                                  "typeString": "contract EthSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EthSwap_$149",
                                  "typeString": "contract EthSwap"
                                }
                              ],
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1332:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1332:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1332:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1332:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 110,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "1357:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1332:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457468537761703a20696e73756666696369656e74206574686572",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1370:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_120d432370bc1e8670a29563cede11a21de97b477acdace2846f7967182972c9",
                          "typeString": "literal_string \"EthSwap: insufficient ether\""
                        },
                        "value": "EthSwap: insufficient ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_120d432370bc1e8670a29563cede11a21de97b477acdace2846f7967182972c9",
                          "typeString": "literal_string \"EthSwap: insufficient ether\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1324:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:76:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1458:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1458:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1478:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EthSwap_$149",
                              "typeString": "contract EthSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EthSwap_$149",
                              "typeString": "contract EthSwap"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1470:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1470:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1470:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 124,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1485:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "dappToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1435:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 208,
                      "src": "1435:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "etherAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1532:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1511:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1511:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1503:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1503:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1503:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1503:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:41:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 137,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1596:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1596:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 141,
                            "name": "dappToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1616:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$227",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$227",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1608:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1608:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1608:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1628:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 144,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1637:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 136,
                      "name": "TokensSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1585:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "EmitStatement",
                  "src": "1580:62:1"
                }
              ]
            },
            "functionSelector": "6c11bcd3",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellTokens",
            "nameLocation": "981:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "997:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "992:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:14:1"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:1"
            },
            "scope": 149,
            "src": "972:677:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 150,
        "src": "83:1569:1",
        "usedErrors": []
      }
    ],
    "src": "0:1653:1"
  },
  "bytecode": "6080604052606460015534801561001557600080fd5b506040516105d13803806105d183398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b610539806100986000396000f3fe60806040526004361061003f5760003560e01c80632c4e722e146100445780635eb186f81461006d5780636c11bcd3146100a5578063d0febe4c146100c7575b600080fd5b34801561005057600080fd5b5061005a60015481565b6040519081526020015b60405180910390f35b34801561007957600080fd5b5060005461008d906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b3480156100b157600080fd5b506100c56100c0366004610459565b6100cf565b005b6100c5610300565b6000546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b9190610472565b101561019c5760405162461bcd60e51b815260206004820152602560248201527f457468537761703a20746f6b656e20616d6f756e7420657863656564732062616044820152646c616e636560d81b60648201526084015b60405180910390fd5b6000600154826101ac919061048b565b9050804710156101fe5760405162461bcd60e51b815260206004820152601b60248201527f457468537761703a20696e73756666696369656e7420657468657200000000006044820152606401610193565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027991906104ad565b50604051339082156108fc029083906000818181858888f193505050501580156102a7573d6000803e3d6000fd5b50600054600154604080513381526001600160a01b039093166020840152820184905260608201527f697c42d55a5e1fed3f464ec6f38b32546a0bd368dc8068b065c67566d73f32909060800160405180910390a15050565b60006001543461031091906104d6565b6000546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190610472565b101561038c57600080fd5b60005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040191906104ad565b50600054600154604080513381526001600160a01b039093166020840152820183905260608201527f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b9060800160405180910390a150565b60006020828403121561046b57600080fd5b5035919050565b60006020828403121561048457600080fd5b5051919050565b6000826104a857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156104bf57600080fd5b815180151581146104cf57600080fd5b9392505050565b60008160001904831182151516156104fe57634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212201b02301eefe73dcca2e6f0eb45d766a56d8ac40a97ebcd288646a064cf50734564736f6c634300080f0033",
  "bytecodeSha1": "6eb5055f2d17cf7b93136bdb1be88da6c0ac7ea9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "EthSwap",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "EthSwap.buyTokens": {
          "10": [
            709,
            758,
            true
          ]
        },
        "EthSwap.sellTokens": {
          "8": [
            1085,
            1127,
            true
          ],
          "9": [
            1332,
            1368,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "EthSwap.buyTokens": {
          "5": [
            701,
            759
          ],
          "6": [
            809,
            852
          ],
          "7": [
            888,
            959
          ]
        },
        "EthSwap.sellTokens": {
          "0": [
            1077,
            1169
          ],
          "1": [
            1324,
            1400
          ],
          "2": [
            1435,
            1493
          ],
          "3": [
            1503,
            1544
          ],
          "4": [
            1580,
            1642
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20"
  ],
  "deployedBytecode": "60806040526004361061003f5760003560e01c80632c4e722e146100445780635eb186f81461006d5780636c11bcd3146100a5578063d0febe4c146100c7575b600080fd5b34801561005057600080fd5b5061005a60015481565b6040519081526020015b60405180910390f35b34801561007957600080fd5b5060005461008d906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b3480156100b157600080fd5b506100c56100c0366004610459565b6100cf565b005b6100c5610300565b6000546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b9190610472565b101561019c5760405162461bcd60e51b815260206004820152602560248201527f457468537761703a20746f6b656e20616d6f756e7420657863656564732062616044820152646c616e636560d81b60648201526084015b60405180910390fd5b6000600154826101ac919061048b565b9050804710156101fe5760405162461bcd60e51b815260206004820152601b60248201527f457468537761703a20696e73756666696369656e7420657468657200000000006044820152606401610193565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027991906104ad565b50604051339082156108fc029083906000818181858888f193505050501580156102a7573d6000803e3d6000fd5b50600054600154604080513381526001600160a01b039093166020840152820184905260608201527f697c42d55a5e1fed3f464ec6f38b32546a0bd368dc8068b065c67566d73f32909060800160405180910390a15050565b60006001543461031091906104d6565b6000546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190610472565b101561038c57600080fd5b60005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040191906104ad565b50600054600154604080513381526001600160a01b039093166020840152820183905260608201527f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b9060800160405180910390a150565b60006020828403121561046b57600080fd5b5035919050565b60006020828403121561048457600080fd5b5051919050565b6000826104a857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156104bf57600080fd5b815180151581146104cf57600080fd5b9392505050565b60008160001904831182151516156104fe57634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212201b02301eefe73dcca2e6f0eb45d766a56d8ac40a97ebcd288646a064cf50734564736f6c634300080f0033",
  "deployedSourceMap": "83:1569:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:22;;;;;;;;;;;;;;;;;;;160:25:2;;;148:2;133:18;136:22:1;;;;;;;;107:23;;;;;;;;;;-1:-1:-1;107:23:1;;;;-1:-1:-1;;;;;107:23:1;;;;;;-1:-1:-1;;;;;374:32:2;;;356:51;;344:2;329:18;107:23:1;196:217:2;972:677:1;;;;;;;;;;-1:-1:-1;972:677:1;;;;;:::i;:::-;;:::i;:::-;;510:456;;;:::i;972:677::-;1085:9;;:31;;-1:-1:-1;;;1085:31:1;;1105:10;1085:31;;;356:51:2;1120:7:1;;-1:-1:-1;;;;;1085:9:1;;:19;;329:18:2;;1085:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1077:92;;;;-1:-1:-1;;;1077:92:1;;1202:2:2;1077:92:1;;;1184:21:2;1241:2;1221:18;;;1214:30;1280:34;1260:18;;;1253:62;-1:-1:-1;;;1331:18:2;;;1324:35;1376:19;;1077:92:1;;;;;;;;;1231:16;1260:4;;1250:7;:14;;;;:::i;:::-;1231:33;;1357:11;1332:21;:36;;1324:76;;;;-1:-1:-1;;;1324:76:1;;1830:2:2;1324:76:1;;;1812:21:2;1869:2;1849:18;;;1842:30;1908:29;1888:18;;;1881:57;1955:18;;1324:76:1;1628:351:2;1324:76:1;1435:9;;:58;;-1:-1:-1;;;1435:58:1;;1458:10;1435:58;;;2224:34:2;1478:4:1;2274:18:2;;;2267:43;2326:18;;;2319:34;;;-1:-1:-1;;;;;1435:9:1;;;;:22;;2159:18:2;;1435:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1503:41:1;;1511:10;;1503:41;;;;;1532:11;;1503:41;;;;1532:11;1511:10;1503:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1616:9:1;;;1637:4;1585:57;;;1596:10;2915:34:2;;-1:-1:-1;;;;;1616:9:1;;;2980:2:2;2965:18;;2958:43;3017:18;;3010:34;;;3075:2;3060:18;;3053:34;1585:57:1;;2864:3:2;2849:19;1585:57:1;;;;;;;1013:636;972:677;:::o;510:456::-;605:16;636:4;;624:9;:16;;;;:::i;:::-;709:9;;:34;;-1:-1:-1;;;709:34:1;;737:4;709:34;;;356:51:2;605:35:1;;-1:-1:-1;605:35:1;;-1:-1:-1;;;;;709:9:1;;;;:19;;329:18:2;;709:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;701:58;;;;;;809:9;;:43;;-1:-1:-1;;;809:43:1;;828:10;809:43;;;3542:51:2;3609:18;;;3602:34;;;-1:-1:-1;;;;;809:9:1;;;;:18;;3515::2;;809:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;929:9:1;;;954:4;893:66;;;909:10;2915:34:2;;-1:-1:-1;;;;;929:9:1;;;2980:2:2;2965:18;;2958:43;3017:18;;3010:34;;;3075:2;3060:18;;3053:34;893:66:1;;2864:3:2;2849:19;893:66:1;;;;;;;546:420;510:456::o;418:180:2:-;477:6;530:2;518:9;509:7;505:23;501:32;498:52;;;546:1;543;536:12;498:52;-1:-1:-1;569:23:2;;418:180;-1:-1:-1;418:180:2:o;811:184::-;881:6;934:2;922:9;913:7;909:23;905:32;902:52;;;950:1;947;940:12;902:52;-1:-1:-1;973:16:2;;811:184;-1:-1:-1;811:184:2:o;1406:217::-;1446:1;1472;1462:132;;1516:10;1511:3;1507:20;1504:1;1497:31;1551:4;1548:1;1541:15;1579:4;1576:1;1569:15;1462:132;-1:-1:-1;1608:9:2;;1406:217::o;2364:277::-;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;2532:9;2526:16;2585:5;2578:13;2571:21;2564:5;2561:32;2551:60;;2607:1;2604;2597:12;2551:60;2630:5;2364:277;-1:-1:-1;;;2364:277:2:o;3098:265::-;3138:7;3204:1;3200;3196:6;3192:14;3189:1;3186:21;3181:1;3174:9;3167:17;3163:45;3160:168;;;3250:10;3245:3;3241:20;3238:1;3231:31;3285:4;3282:1;3275:15;3313:4;3310:1;3303:15;3160:168;-1:-1:-1;3348:9:2;;3098:265::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    83,
    1652
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x472 JUMP JUMPDEST LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457468537761703A20746F6B656E20616D6F756E742065786365656473206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C616E6365 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457468537761703A20696E73756666696369656E742065746865720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x697C42D55A5E1FED3F464EC6F38B32546A0BD368DC8068B065C67566D73F3290 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x472 JUMP JUMPDEST LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL MUL ADDRESS 0x1E 0xEF 0xE7 RETURNDATASIZE 0xCC LOG2 0xE6 CREATE 0xEB GASLIMIT 0xD7 PUSH7 0xA56D8AC40A97EB 0xCD 0x28 DUP7 CHAINID LOG0 PUSH5 0xCF50734564 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F"
    },
    "12": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2C4E722E"
    },
    "25": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44"
    },
    "29": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5EB186F8"
    },
    "36": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D"
    },
    "40": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6C11BCD3"
    },
    "47": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5"
    },
    "51": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0FEBE4C"
    },
    "58": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7"
    },
    "62": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "66": {
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "67": {
      "first_revert": true,
      "fn": null,
      "offset": [
        83,
        1652
      ],
      "op": "REVERT",
      "path": "1"
    },
    "68": {
      "offset": [
        136,
        158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "69": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "DUP1",
      "path": "1"
    },
    "71": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50"
    },
    "75": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "78": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "DUP1",
      "path": "1"
    },
    "79": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "REVERT",
      "path": "1"
    },
    "80": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "POP",
      "path": "1"
    },
    "82": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A"
    },
    "85": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "87": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "DUP2",
      "path": "1"
    },
    "89": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "JUMP",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "93": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "94": {
      "op": "SWAP1"
    },
    "95": {
      "op": "DUP2"
    },
    "96": {
      "op": "MSTORE"
    },
    "97": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "99": {
      "op": "ADD"
    },
    "100": {
      "offset": [
        136,
        158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "103": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "DUP1",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "106": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "SUB",
      "path": "1"
    },
    "107": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        136,
        158
      ],
      "op": "RETURN",
      "path": "1"
    },
    "109": {
      "offset": [
        107,
        130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "111": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79"
    },
    "116": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "117": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "119": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "DUP1",
      "path": "1"
    },
    "120": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "REVERT",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "122": {
      "op": "POP"
    },
    "123": {
      "offset": [
        107,
        130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "129": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "136": {
      "op": "SHL"
    },
    "137": {
      "op": "SUB"
    },
    "138": {
      "offset": [
        107,
        130
      ],
      "op": "AND",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "DUP2",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "144": {
      "fn": null,
      "offset": [
        107,
        130
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "151": {
      "op": "SHL"
    },
    "152": {
      "op": "SUB"
    },
    "153": {
      "op": "SWAP1"
    },
    "154": {
      "op": "SWAP2"
    },
    "155": {
      "op": "AND"
    },
    "156": {
      "op": "DUP2"
    },
    "157": {
      "op": "MSTORE"
    },
    "158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "160": {
      "op": "ADD"
    },
    "161": {
      "offset": [
        107,
        130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "164": {
      "op": "JUMP"
    },
    "165": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "166": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "167": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "DUP1",
      "path": "1"
    },
    "168": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "169": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1"
    },
    "172": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "173": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "175": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "DUP1",
      "path": "1"
    },
    "176": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "REVERT",
      "path": "1"
    },
    "177": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "178": {
      "op": "POP"
    },
    "179": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "182": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0"
    },
    "185": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "186": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "188": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x459"
    },
    "191": {
      "fn": "EthSwap.sellTokens",
      "jump": "i",
      "offset": [
        972,
        1649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "192": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "193": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "196": {
      "fn": "EthSwap.sellTokens",
      "jump": "i",
      "offset": [
        972,
        1649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "197": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "198": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "STOP",
      "path": "1"
    },
    "199": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        510,
        966
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "200": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        510,
        966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "203": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        510,
        966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x300"
    },
    "206": {
      "fn": "EthSwap.buyTokens",
      "jump": "i",
      "offset": [
        510,
        966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "207": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1094
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x0"
    },
    "210": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1094
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "211": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "213": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "214": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "221": {
      "op": "SHL"
    },
    "222": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "223": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "224": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1105,
        1115
      ],
      "op": "CALLER",
      "path": "1"
    },
    "225": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "227": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "228": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ADD",
      "path": "1"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1120,
        1127
      ],
      "op": "DUP3",
      "path": "1"
    },
    "231": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1120,
        1127
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "op": "SUB"
    },
    "240": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1094
      ],
      "op": "AND",
      "path": "1"
    },
    "241": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1094
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "242": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1104
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "247": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "250": {
      "op": "ADD"
    },
    "251": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "253": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "255": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "256": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "257": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP4",
      "path": "1"
    },
    "258": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "SUB",
      "path": "1"
    },
    "259": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "260": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP7",
      "path": "1"
    },
    "261": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "GAS",
      "path": "1"
    },
    "262": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "263": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "264": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "265": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "266": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x117"
    },
    "269": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "270": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "271": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "273": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "274": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "275": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "276": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "278": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "279": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "280": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "POP",
      "path": "1"
    },
    "281": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "POP",
      "path": "1"
    },
    "282": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "POP",
      "path": "1"
    },
    "283": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "POP",
      "path": "1"
    },
    "284": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "286": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "287": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "288": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "290": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "NOT",
      "path": "1"
    },
    "291": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "293": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "294": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ADD",
      "path": "1"
    },
    "295": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "AND",
      "path": "1"
    },
    "296": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "297": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ADD",
      "path": "1"
    },
    "298": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "299": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "301": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "302": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "POP",
      "path": "1"
    },
    "303": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "304": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "ADD",
      "path": "1"
    },
    "305": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "306": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13B"
    },
    "309": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "310": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "311": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x472"
    },
    "314": {
      "fn": "EthSwap.sellTokens",
      "jump": "i",
      "offset": [
        1085,
        1116
      ],
      "op": "JUMP",
      "path": "1"
    },
    "315": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1116
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "316": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1127
      ],
      "op": "LT",
      "path": "1"
    },
    "317": {
      "branch": 8,
      "fn": "EthSwap.sellTokens",
      "offset": [
        1085,
        1127
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "318": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19C"
    },
    "321": {
      "branch": 8,
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "322": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "324": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "DUP2",
      "path": "1"
    },
    "333": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "338": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "DUP3",
      "path": "1"
    },
    "339": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "ADD",
      "path": "1"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "345": {
      "op": "DUP3"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "op": "MSTORE"
    },
    "348": {
      "op": "PUSH32",
      "value": "0x457468537761703A20746F6B656E20616D6F756E742065786365656473206261"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "383": {
      "op": "DUP3"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH5",
      "value": "0x6C616E6365"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "397": {
      "op": "DUP3"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "402": {
      "op": "ADD"
    },
    "403": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "404": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "406": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "407": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "DUP1",
      "path": "1"
    },
    "408": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "409": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "SUB",
      "path": "1"
    },
    "410": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "411": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "REVERT",
      "path": "1"
    },
    "412": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1077,
        1169
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "413": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1231,
        1247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "415": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1260,
        1264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "417": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1260,
        1264
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "418": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1257
      ],
      "op": "DUP3",
      "path": "1"
    },
    "419": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AC"
    },
    "422": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1264
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "423": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1264
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "424": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48B"
    },
    "427": {
      "fn": "EthSwap.sellTokens",
      "jump": "i",
      "offset": [
        1250,
        1264
      ],
      "op": "JUMP",
      "path": "1"
    },
    "428": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1250,
        1264
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "429": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1231,
        1264
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "430": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1231,
        1264
      ],
      "op": "POP",
      "path": "1"
    },
    "431": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1357,
        1368
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 1
    },
    "432": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1332,
        1353
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "433": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1332,
        1368
      ],
      "op": "LT",
      "path": "1"
    },
    "434": {
      "branch": 9,
      "fn": "EthSwap.sellTokens",
      "offset": [
        1332,
        1368
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "435": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FE"
    },
    "438": {
      "branch": 9,
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "439": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "441": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "DUP2",
      "path": "1"
    },
    "450": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "453": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "455": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "DUP3",
      "path": "1"
    },
    "456": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "ADD",
      "path": "1"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "462": {
      "op": "DUP3"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "op": "MSTORE"
    },
    "465": {
      "op": "PUSH32",
      "value": "0x457468537761703A20696E73756666696369656E742065746865720000000000"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "500": {
      "op": "DUP3"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "505": {
      "op": "ADD"
    },
    "506": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x193"
    },
    "509": {
      "op": "JUMP"
    },
    "510": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1324,
        1400
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "511": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x0"
    },
    "513": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "514": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "516": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "517": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "526": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "527": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1458,
        1468
      ],
      "op": "CALLER",
      "path": "1"
    },
    "528": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "530": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "531": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ADD",
      "path": "1"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1478,
        1482
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "op": "DUP5"
    },
    "544": {
      "op": "SWAP1"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "op": "SUB"
    },
    "554": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "555": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "556": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "AND",
      "path": "1"
    },
    "557": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "558": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1457
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "563": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1457
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "566": {
      "op": "ADD"
    },
    "567": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "569": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "571": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "572": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "573": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP4",
      "path": "1"
    },
    "574": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "SUB",
      "path": "1"
    },
    "575": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "576": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "578": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP8",
      "path": "1"
    },
    "579": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "GAS",
      "path": "1"
    },
    "580": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "CALL",
      "path": "1"
    },
    "581": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "582": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "583": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "584": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "587": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "588": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "589": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "591": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "592": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "593": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "594": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "596": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "REVERT",
      "path": "1"
    },
    "597": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "598": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "POP",
      "path": "1"
    },
    "599": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "POP",
      "path": "1"
    },
    "600": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "POP",
      "path": "1"
    },
    "601": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "POP",
      "path": "1"
    },
    "602": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "604": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "605": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "606": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "608": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "NOT",
      "path": "1"
    },
    "609": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "611": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "612": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ADD",
      "path": "1"
    },
    "613": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "AND",
      "path": "1"
    },
    "614": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP3",
      "path": "1"
    },
    "615": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ADD",
      "path": "1"
    },
    "616": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "617": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "619": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "620": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "POP",
      "path": "1"
    },
    "621": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "622": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "ADD",
      "path": "1"
    },
    "623": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "624": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x279"
    },
    "627": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "628": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "629": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AD"
    },
    "632": {
      "fn": "EthSwap.sellTokens",
      "jump": "i",
      "offset": [
        1435,
        1493
      ],
      "op": "JUMP",
      "path": "1"
    },
    "633": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1435,
        1493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x40"
    },
    "637": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "638": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1511,
        1521
      ],
      "op": "CALLER",
      "path": "1"
    },
    "639": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1511,
        1521
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "640": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "641": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "642": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "645": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "MUL",
      "path": "1"
    },
    "646": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "647": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1532,
        1543
      ],
      "op": "DUP4",
      "path": "1"
    },
    "648": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1532,
        1543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "649": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "651": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "652": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "653": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "654": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1532,
        1543
      ],
      "op": "DUP6",
      "path": "1"
    },
    "655": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1511,
        1521
      ],
      "op": "DUP9",
      "path": "1"
    },
    "656": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP9",
      "path": "1"
    },
    "657": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "CALL",
      "path": "1"
    },
    "658": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "659": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "POP",
      "path": "1"
    },
    "660": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "POP",
      "path": "1"
    },
    "661": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "POP",
      "path": "1"
    },
    "662": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "POP",
      "path": "1"
    },
    "663": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "664": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "665": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "666": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A7"
    },
    "669": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "670": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "671": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "673": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "674": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "675": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "676": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "678": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "REVERT",
      "path": "1"
    },
    "679": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1503,
        1544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "683": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "684": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "686": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1637,
        1641
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "687": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "689": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "DUP1",
      "path": "1"
    },
    "690": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "691": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1596,
        1606
      ],
      "op": "CALLER",
      "path": "1"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "700": {
      "op": "SHL"
    },
    "701": {
      "op": "SUB"
    },
    "702": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "703": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "704": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1616,
        1625
      ],
      "op": "AND",
      "path": "1"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "707": {
      "op": "DUP5"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "DUP3"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "op": "DUP5"
    },
    "713": {
      "op": "SWAP1"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "717": {
      "op": "DUP3"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x697C42D55A5E1FED3F464EC6F38B32546A0BD368DC8068B065C67566D73F3290"
    },
    "753": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "756": {
      "op": "ADD"
    },
    "757": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "759": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "760": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "DUP1",
      "path": "1"
    },
    "761": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "762": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "SUB",
      "path": "1"
    },
    "763": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "764": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1585,
        1642
      ],
      "op": "LOG1",
      "path": "1"
    },
    "765": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        1013,
        1649
      ],
      "op": "POP",
      "path": "1"
    },
    "766": {
      "fn": "EthSwap.sellTokens",
      "offset": [
        972,
        1649
      ],
      "op": "POP",
      "path": "1"
    },
    "767": {
      "fn": "EthSwap.sellTokens",
      "jump": "o",
      "offset": [
        972,
        1649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "768": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        510,
        966
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "769": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        605,
        621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "771": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        636,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "773": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        636,
        640
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "774": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        633
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "775": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x310"
    },
    "778": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "779": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "780": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D6"
    },
    "783": {
      "fn": "EthSwap.buyTokens",
      "jump": "i",
      "offset": [
        624,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "784": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        624,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "785": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "787": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "788": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "790": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "791": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP2",
      "path": "1"
    },
    "800": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "801": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        737,
        741
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "802": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "804": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP3",
      "path": "1"
    },
    "805": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ADD",
      "path": "1"
    },
    "806": {
      "op": "MSTORE"
    },
    "807": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        605,
        640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "808": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        605,
        640
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        605,
        640
      ],
      "op": "DUP3",
      "path": "1"
    },
    "811": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        605,
        640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "SUB"
    },
    "820": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "821": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "822": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "AND",
      "path": "1"
    },
    "823": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "824": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        728
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "829": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "835": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "837": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "838": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "839": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP4",
      "path": "1"
    },
    "840": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "SUB",
      "path": "1"
    },
    "841": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP2",
      "path": "1"
    },
    "842": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP7",
      "path": "1"
    },
    "843": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "GAS",
      "path": "1"
    },
    "844": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "845": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "846": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "847": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "848": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35D"
    },
    "851": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "852": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "853": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "855": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "856": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "857": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "858": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "860": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "REVERT",
      "path": "1"
    },
    "861": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "862": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "POP",
      "path": "1"
    },
    "863": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "POP",
      "path": "1"
    },
    "864": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "POP",
      "path": "1"
    },
    "865": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "POP",
      "path": "1"
    },
    "866": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "868": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "869": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "870": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "872": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "NOT",
      "path": "1"
    },
    "873": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "875": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP3",
      "path": "1"
    },
    "876": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ADD",
      "path": "1"
    },
    "877": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "AND",
      "path": "1"
    },
    "878": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP3",
      "path": "1"
    },
    "879": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ADD",
      "path": "1"
    },
    "880": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "881": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "883": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "884": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "POP",
      "path": "1"
    },
    "885": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "DUP2",
      "path": "1"
    },
    "886": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "ADD",
      "path": "1"
    },
    "887": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "888": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "891": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "892": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "893": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x472"
    },
    "896": {
      "fn": "EthSwap.buyTokens",
      "jump": "i",
      "offset": [
        709,
        743
      ],
      "op": "JUMP",
      "path": "1"
    },
    "897": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        743
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        758
      ],
      "op": "LT",
      "path": "1"
    },
    "899": {
      "branch": 10,
      "fn": "EthSwap.buyTokens",
      "offset": [
        709,
        758
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "900": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38C"
    },
    "903": {
      "branch": 10,
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "904": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "906": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "DUP1",
      "path": "1"
    },
    "907": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "REVERT",
      "path": "1"
    },
    "908": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        701,
        759
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "909": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "911": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "912": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "914": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "915": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP2",
      "path": "1"
    },
    "924": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "925": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        828,
        838
      ],
      "op": "CALLER",
      "path": "1"
    },
    "926": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "928": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP3",
      "path": "1"
    },
    "929": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ADD",
      "path": "1"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "DUP4"
    },
    "936": {
      "op": "SWAP1"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "947": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "948": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "AND",
      "path": "1"
    },
    "949": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "950": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        827
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "955": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "958": {
      "op": "ADD"
    },
    "959": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "961": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "963": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "964": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP1",
      "path": "1"
    },
    "965": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP4",
      "path": "1"
    },
    "966": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "SUB",
      "path": "1"
    },
    "967": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP2",
      "path": "1"
    },
    "968": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "970": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP8",
      "path": "1"
    },
    "971": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "GAS",
      "path": "1"
    },
    "972": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "CALL",
      "path": "1"
    },
    "973": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "974": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP1",
      "path": "1"
    },
    "975": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "976": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DD"
    },
    "979": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "980": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "981": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "983": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP1",
      "path": "1"
    },
    "984": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "985": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "986": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "988": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "REVERT",
      "path": "1"
    },
    "989": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "990": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "POP",
      "path": "1"
    },
    "991": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "POP",
      "path": "1"
    },
    "992": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "POP",
      "path": "1"
    },
    "993": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "POP",
      "path": "1"
    },
    "994": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "996": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "997": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "998": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1000": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "NOT",
      "path": "1"
    },
    "1001": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1003": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1004": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ADD",
      "path": "1"
    },
    "1005": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "AND",
      "path": "1"
    },
    "1006": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1007": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ADD",
      "path": "1"
    },
    "1008": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1009": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1011": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1012": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "POP",
      "path": "1"
    },
    "1013": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1014": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "ADD",
      "path": "1"
    },
    "1015": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1016": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x401"
    },
    "1019": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1020": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1021": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AD"
    },
    "1024": {
      "fn": "EthSwap.buyTokens",
      "jump": "i",
      "offset": [
        809,
        852
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1025": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        809,
        852
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1029": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1030": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1032": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        954,
        958
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1033": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1035": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1036": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1037": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        909,
        919
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1049": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1050": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        929,
        938
      ],
      "op": "AND",
      "path": "1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1053": {
      "op": "DUP5"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "DUP3"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "op": "DUP4"
    },
    "1059": {
      "op": "SWAP1"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
    },
    "1099": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1105": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1106": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1107": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1108": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "SUB",
      "path": "1"
    },
    "1109": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1110": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        893,
        959
      ],
      "op": "LOG1",
      "path": "1"
    },
    "1111": {
      "fn": "EthSwap.buyTokens",
      "offset": [
        546,
        966
      ],
      "op": "POP",
      "path": "1"
    },
    "1112": {
      "fn": "EthSwap.buyTokens",
      "jump": "o",
      "offset": [
        510,
        966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "DUP5"
    },
    "1120": {
      "op": "SUB"
    },
    "1121": {
      "op": "SLT"
    },
    "1122": {
      "op": "ISZERO"
    },
    "1123": {
      "op": "PUSH2",
      "value": "0x46B"
    },
    "1126": {
      "op": "JUMPI"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1129": {
      "op": "DUP1"
    },
    "1130": {
      "op": "REVERT"
    },
    "1131": {
      "op": "JUMPDEST"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "op": "CALLDATALOAD"
    },
    "1134": {
      "op": "SWAP2"
    },
    "1135": {
      "op": "SWAP1"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "jump": "o",
      "op": "JUMP"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "DUP5"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "op": "SLT"
    },
    "1147": {
      "op": "ISZERO"
    },
    "1148": {
      "op": "PUSH2",
      "value": "0x484"
    },
    "1151": {
      "op": "JUMPI"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1154": {
      "op": "DUP1"
    },
    "1155": {
      "op": "REVERT"
    },
    "1156": {
      "op": "JUMPDEST"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "op": "MLOAD"
    },
    "1159": {
      "op": "SWAP2"
    },
    "1160": {
      "op": "SWAP1"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "jump": "o",
      "op": "JUMP"
    },
    "1163": {
      "op": "JUMPDEST"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1166": {
      "op": "DUP3"
    },
    "1167": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1170": {
      "op": "JUMPI"
    },
    "1171": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1191": {
      "op": "REVERT"
    },
    "1192": {
      "op": "JUMPDEST"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "DIV"
    },
    "1195": {
      "op": "SWAP1"
    },
    "1196": {
      "jump": "o",
      "op": "JUMP"
    },
    "1197": {
      "op": "JUMPDEST"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1202": {
      "op": "DUP3"
    },
    "1203": {
      "op": "DUP5"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "op": "SLT"
    },
    "1206": {
      "op": "ISZERO"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x4BF"
    },
    "1210": {
      "op": "JUMPI"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1213": {
      "op": "DUP1"
    },
    "1214": {
      "op": "REVERT"
    },
    "1215": {
      "op": "JUMPDEST"
    },
    "1216": {
      "op": "DUP2"
    },
    "1217": {
      "op": "MLOAD"
    },
    "1218": {
      "op": "DUP1"
    },
    "1219": {
      "op": "ISZERO"
    },
    "1220": {
      "op": "ISZERO"
    },
    "1221": {
      "op": "DUP2"
    },
    "1222": {
      "op": "EQ"
    },
    "1223": {
      "op": "PUSH2",
      "value": "0x4CF"
    },
    "1226": {
      "op": "JUMPI"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1229": {
      "op": "DUP1"
    },
    "1230": {
      "op": "REVERT"
    },
    "1231": {
      "op": "JUMPDEST"
    },
    "1232": {
      "op": "SWAP4"
    },
    "1233": {
      "op": "SWAP3"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "jump": "o",
      "op": "JUMP"
    },
    "1238": {
      "op": "JUMPDEST"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "DUP2"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "NOT"
    },
    "1245": {
      "op": "DIV"
    },
    "1246": {
      "op": "DUP4"
    },
    "1247": {
      "op": "GT"
    },
    "1248": {
      "op": "DUP3"
    },
    "1249": {
      "op": "ISZERO"
    },
    "1250": {
      "op": "ISZERO"
    },
    "1251": {
      "op": "AND"
    },
    "1252": {
      "op": "ISZERO"
    },
    "1253": {
      "op": "PUSH2",
      "value": "0x4FE"
    },
    "1256": {
      "op": "JUMPI"
    },
    "1257": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1277": {
      "op": "REVERT"
    },
    "1278": {
      "op": "JUMPDEST"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "op": "MUL"
    },
    "1281": {
      "op": "SWAP1"
    },
    "1282": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "647c94f34994910a4c683bd77d25e1f329a1981f",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract EthSwap {\n\n    IERC20 public dappToken;\n    uint public rate = 100;\n\n    event TokensPurchased(\n        address account,\n        address token,\n        uint amount,\n        uint rate\n    );\n\n    event TokensSold(\n        address account,\n        address token,\n        uint amount,\n        uint rate\n    );\n\n    constructor(address _dappTokenAddress) public {\n        dappToken = IERC20(_dappTokenAddress);\n    }\n\n    function buyTokens() public payable {\n        // Calculate the number of tokens to buy\n        uint tokenAmount = msg.value * rate;\n\n        // Require that EthSwap has enough tokens\n        require(dappToken.balanceOf(address(this)) >= tokenAmount);\n\n        // Transfer tokens to the user\n        dappToken.transfer(msg.sender, tokenAmount);\n\n        // Emit an event\n        emit TokensPurchased(msg.sender, address(dappToken), tokenAmount, rate);\n    }\n\n    function sellTokens(uint _amount) public {\n        // User can't sell more tokens than they have\n        require(dappToken.balanceOf(msg.sender) >= _amount, \"EthSwap: token amount exceeds balance\");\n\n        // Calculate the amount of Ether to redeem\n        uint etherAmount = _amount / rate;\n\n        // Require that EthSwap has enough Ether\n        require(address(this).balance >= etherAmount, \"EthSwap: insufficient ether\");\n\n        // Perform sale\n        dappToken.transferFrom(msg.sender, address(this), _amount);\n        payable(msg.sender).transfer(etherAmount);\n\n        // Emit an event\n        emit TokensSold(msg.sender, address(dappToken), _amount, rate);\n    }\n\n}\n",
  "sourceMap": "83:1569:1:-:0;;;155:3;136:22;;404:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:9;:37;;-1:-1:-1;;;;;;460:37:1;-1:-1:-1;;;;;460:37:1;;;;;;;;;;83:1569;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;83:1569:1;;;;;;",
  "sourcePath": "contracts/EthSwap.sol",
  "type": "contract"
}